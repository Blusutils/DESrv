# Artifacts on intermediate per-commit DESrv build
name: Build DESrv Release

on:
  # trigger it only on new releases
  release:
    

jobs:

  buildwin:
    runs-on: windows-latest
    steps:
    # just clone DESrv repo
    - name: Clone repository
      uses: actions/checkout@v3
    # setup .NET
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    # restore nuget
    - name: Restore dependencies
      run: dotnet restore --nologo
      working-directory: DES-Core/
    # do build!
    - name: Build
      run: dotnet build -c Release -o outs-win --sc -v n --nologo
      working-directory: DES-Core/
    # pack binaries into archive
    - name: Create archive
      run: tar -c -a -f DESrv_Windows.zip outs-win
      working-directory: DES-Core/
    # upload build
    - name: Upload build to Release
      uses: irongut/EditRelease@v1.2.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        id: ${{ github.event.release.id }}
        files: "DESrv_Windows.zip"


  buildlinux:
    runs-on: ubuntu-latest
    steps:
    # just clone DESrv repo
    - name: Clone repository
      uses: actions/checkout@v3
    # setup .NET
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    # restore nuget
    - name: Restore dependencies
      run: dotnet restore --nologo
      working-directory: DES-Core/
    # do build!
    - name: Build
      run: dotnet build -c Debug -o outs-linux --sc -v n --nologo
      working-directory: DES-Core/
    # pack binaries into archive
    - name: Create archive
      run: tar -czvf DESrv_Linux.tar.gz ./outs-linux
      working-directory: DES-Core/
    # upload build
    - name: Upload build to Release
      uses: irongut/EditRelease@v1.2.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        id: ${{ github.event.release.id }}
        files: "DESrv_Linux.tar.gz"
